
#=================================================================#
# Template file: dldDetectorv2.template
# Database for the records specific to the delay-line detector driver
#
# --- !!! CAUTION !!! -----------------------------------------------
# Do not edit this file. This file is generated by a script which needs
# to be re-run every time the application library is updated and the
# list of parameters exposed by this library has changed.
# -------------------------------------------------------------------
include "ADBase.template"

record(mbbo, "$(P)$(R)ColorMode")
{
   field(DISA, 1)
}

record(mbbi, "$(P)$(R)ColorMode_RBV")
{
   field(DISA, 1)
}
record(mbbi, "$(P)$(R)Initialize_RBV")
{
    field(DTYP, "asynInt32")
    field(DESC, "(De)Initialize the Hardware")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_INIT")
    field(ZRVL, "0")
    field(ZRST, "OFF")
    field(ONVL, "1")
    field(ONST, "ON")
    field(SCAN, "I/O Intr")
}
record(mbbo, "$(P)$(R)Initialize")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(DESC, "(De)Initialize the Hardware")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_INIT")
    field(VAL, "0")
    field(ZRVL, "0")
    field(ZRST, "OFF")
    field(ONVL, "1")
    field(ONST, "ON")
    info(autosaveFields, "VAL")
}
record(waveform, "$(P)$(R)ConfigFile_RBV")
{
    field(DTYP, "asynOctetRead")
    field(DESC, "Config/ini file for TDC")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_CFGFILE")
    field(FTVL, "CHAR")
    field(NELM, "2048")
    field(SCAN, "I/O Intr")
}
record(waveform, "$(P)$(R)ConfigFile")
{
    field(PINI, "YES")
    field(DTYP, "asynOctetWrite")
    field(DESC, "Config/ini file for TDC")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_CFGFILE")
    field(FTVL, "CHAR")
    field(NELM, "2048")
    info(autosaveFields, "VAL")
}
record(longin, "$(P)$(R)SizeT_RBV")
{
    field(DTYP, "asynInt32")
    field(DESC, "number of data points in his")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_SIZE_T")
    field(SCAN, "I/O Intr")
}
record(longout, "$(P)$(R)SizeT")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(DESC, "number of data points in his")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_SIZE_T")
    field(VAL, "100")
    info(autosaveFields, "VAL")
}
record(ai, "$(P)$(R)MinTSI_RBV")
{
    field(DTYP, "asynFloat64")
    field(DESC, "start of time interval")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_MIN_T_SI")
    field(VAL,  "0.000")
    field(PREC, "3")
    field(EGU, "ns")
    field(SCAN, "I/O Intr")
}
record(ao, "$(P)$(R)MinTSI")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(DESC, "start of time interval")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_MIN_T_SI")
    field(VAL,  "0.000")
    field(PREC, "3")
    field(EGU, "ns")
    info(autosaveFields, "VAL")
}
record(ai, "$(P)$(R)SizeTSI_RBV")
{
    field(DTYP, "asynFloat64")
    field(DESC, "length of time interval")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_SIZE_T_SI")
    field(VAL,  "0.000")
    field(PREC, "3")
    field(EGU, "ns")
    field(SCAN, "I/O Intr")
}
record(ao, "$(P)$(R)SizeTSI")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field(DESC, "length of time interval")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_SIZE_T_SI")
    field(VAL,  "0.000")
    field(PREC, "3")
    field(EGU, "ns")
    info(autosaveFields, "VAL")
}

record(waveform, "$(P)$(R)Ratemeter")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32ArrayIn")
    field(DESC, "rates of TDC channels + comb")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_RATEMETER")
    field(FTVL, "LONG")
    field(NELM, "70")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)RatemeterMax")
{
    field(DTYP, "asynInt32")
    field(DESC, "maximum of the rates of TDC ")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_MAXRATE")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)TimeHistoDataX")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64ArrayIn")
    field(DESC, "")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_TIME_HISTO_X")
    field(FTVL, "DOUBLE")
    field(NELM, "4000000")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)TimeHistoDataY")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64ArrayIn")
    field(DESC, "")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_TIME_HISTO_Y")
    field(FTVL, "DOUBLE")
    field(NELM, "4000000")
    field(SCAN, "I/O Intr")
}
record(waveform, "$(P)$(R)H5EventsFilePath_RBV")
{
    field(DTYP, "asynOctetRead")
    field(DESC, "")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_H5EVENTS_FILE")
    field(FTVL, "CHAR")
    field(NELM, "2048")
    field(SCAN, "I/O Intr")
}
record(waveform, "$(P)$(R)H5EventsFilePath")
{
    field(PINI, "YES")
    field(DTYP, "asynOctetWrite")
    field(DESC, "")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_H5EVENTS_FILE")
    field(FTVL, "CHAR")
    field(NELM, "2048")
    info(autosaveFields, "VAL")
}
record(waveform, "$(P)$(R)H5EventsComment_RBV")
{
    field(DTYP, "asynOctetRead")
    field(DESC, "")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_H5EVENTS_COMMENT")
    field(FTVL, "CHAR")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}
record(waveform, "$(P)$(R)H5EventsComment")
{
    field(PINI, "YES")
    field(DTYP, "asynOctetWrite")
    field(DESC, "")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_H5EVENTS_COMMENT")
    field(FTVL, "CHAR")
    field(NELM, "4096")
    info(autosaveFields, "VAL")
}
record(mbbi, "$(P)$(R)H5EventsActive_RBV")
{
    field(DTYP, "asynInt32")
    field(DESC, "Open / Close HDF5 file")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_H5EVENTS_ACTIVE")
    field(ZRVL, "0")
    field(ZRST, "OFF")
    field(ONVL, "1")
    field(ONST, "ON")
    field(SCAN, "I/O Intr")
}
record(mbbo, "$(P)$(R)H5EventsActive")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(DESC, "Open / Close HDF5 file")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_H5EVENTS_ACTIVE")
    field(VAL, "0")
    field(ZRVL, "0")
    field(ZRST, "OFF")
    field(ONVL, "1")
    field(ONST, "ON")
    info(autosaveFields, "VAL")
}
record(longin, "$(P)$(R)H5EventsFileError")
{
    field(DTYP, "asynInt32")
    field(DESC, "1 if error during opening th")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DLD_H5EVENTS_FILEERROR")
    field(SCAN, "I/O Intr")
}
